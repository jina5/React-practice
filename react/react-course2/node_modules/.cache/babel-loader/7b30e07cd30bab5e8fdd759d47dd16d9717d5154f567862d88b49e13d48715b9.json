{"ast":null,"code":"var _jsxFileName = \"/Users/jina/Desktop/react/react-course2/src/pages/AllMeetups.js\",\n  _s = $RefreshSig$();\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { useState, useEffect } from \"react\";\n//useEffect : 특정 조건을 만족하면 일부 코드를 실행하는 훅\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllMeetupsPage() {\n  _s();\n  /*Fetch -> 프라미스 (비동기처리) 반환 ,\n  await async 하면 함수가 프로미스 반환함수가 되어 비동기처리임, 리액트 컴포넌트 아님, 리액트 컴포넌트는 동기식이어야 한다. jsx를 바로 반환해야한다. \n  응답을 받을때까지 값을 반환하는것을 미룰수없다.\n  /*임시 jsx를 로딩스피너로 반환해야 한다. 다음에 응답받은 jsx코드를 보낸다. \n  state를 통해 변화 인식! */\n\n  //state 변할때 마다 컴포넌트 함수 다시 실행...\n  const [isLoading, setIsLoading] = useState(true); //로딩 상태 : 현재상태, 상태업데이트함수\n  const [loadedMeetups, setLoadedMeetups] = useState([]);\n  //라우터에 의해 로딩되는 페이지로 사용되는 컴포넌트라고 구분하기 위해 이름을 이렇게 지어줄뿐....\n\n  useEffect(() => {}, []); //(함수, 의존형배열)\n  fetch(\"https://react-getting-started-2c59b-default-rtdb.firebaseio.com/meetups.json\").then(response => {\n    return response.json(); /* json도 프라미스 반환하기때문에 프라미스 해결될때 까지 기다려야 한다. */\n  }).then(data => {\n    setIsLoading(false);\n    setLoadedMeetups(data);\n  });\n  if (isLoading) {\n    //임시 jsx\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Meetups \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: loadedMeetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AllMeetupsPage, \"JeEKF2tZ58/s7PjUTNq9ybMF8W0=\");\n_c = AllMeetupsPage;\nexport default AllMeetupsPage;\nvar _c;\n$RefreshReg$(_c, \"AllMeetupsPage\");","map":{"version":3,"names":["MeetupList","useState","useEffect","AllMeetupsPage","isLoading","setIsLoading","loadedMeetups","setLoadedMeetups","fetch","then","response","json","data"],"sources":["/Users/jina/Desktop/react/react-course2/src/pages/AllMeetups.js"],"sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\nimport { useState, useEffect } from \"react\";\n//useEffect : 특정 조건을 만족하면 일부 코드를 실행하는 훅\n\nfunction AllMeetupsPage() {\n  /*Fetch -> 프라미스 (비동기처리) 반환 ,\n  await async 하면 함수가 프로미스 반환함수가 되어 비동기처리임, 리액트 컴포넌트 아님, 리액트 컴포넌트는 동기식이어야 한다. jsx를 바로 반환해야한다. \n  응답을 받을때까지 값을 반환하는것을 미룰수없다.\n  /*임시 jsx를 로딩스피너로 반환해야 한다. 다음에 응답받은 jsx코드를 보낸다. \n  state를 통해 변화 인식! */\n\n  //state 변할때 마다 컴포넌트 함수 다시 실행...\n  const [isLoading, setIsLoading] = useState(true); //로딩 상태 : 현재상태, 상태업데이트함수\n  const [loadedMeetups, setLoadedMeetups] = useState([]);\n  //라우터에 의해 로딩되는 페이지로 사용되는 컴포넌트라고 구분하기 위해 이름을 이렇게 지어줄뿐....\n\n  useEffect(()=>{}, []); //(함수, 의존형배열)\n  fetch(\n    \"https://react-getting-started-2c59b-default-rtdb.firebaseio.com/meetups.json\"\n  )\n    .then((response) => {\n      return response.json(); /* json도 프라미스 반환하기때문에 프라미스 해결될때 까지 기다려야 한다. */\n    })\n    .then((data) => {\n      setIsLoading(false);\n      setLoadedMeetups(data);\n    });\n  if (isLoading) {\n    //임시 jsx\n    return (\n      <section>\n        <p>Loading....</p>\n      </section>\n    );\n  }\n  return (\n    <section>\n      <h1>All Meetups </h1>\n      <MeetupList meetups={loadedMeetups} />\n    </section>\n  );\n}\nexport default AllMeetupsPage;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,kCAAkC;AACzD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AAAA;AAEA,SAASC,cAAc,GAAG;EAAA;EACxB;AACF;AACA;AACA;AACA;;EAEE;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD;;EAEAC,SAAS,CAAC,MAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACvBM,KAAK,CACH,8EAA8E,CAC/E,CACEC,IAAI,CAAEC,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;IACdP,YAAY,CAAC,KAAK,CAAC;IACnBE,gBAAgB,CAACK,IAAI,CAAC;EACxB,CAAC,CAAC;EACJ,IAAIR,SAAS,EAAE;IACb;IACA,oBACE;MAAA,uBACE;QAAA,UAAG;MAAW;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACV;EAEd;EACA,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB,QAAC,UAAU;MAAC,OAAO,EAAEE;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEd;AAAC,GArCQH,cAAc;AAAA,KAAdA,cAAc;AAsCvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}